@use '../../../styles/mixins';
@use '../../../styles/variables';

$radius: 0.75rem;
$gutter: 0.75rem;

@keyframes spring-down {
	0% {
		transform: translate3d(0, -30px, 0);
	}

	41% {
		transform: translate3d(0, 2px, 0);
	}

	to {
		transform: translate3d(0, 0, 0);
	}
}

.menu {
	position: absolute;
	border-radius: $radius;
	min-width: 180px;
	overflow: hidden;
	will-change: transform;
	transform-origin: top left;
	z-index: 999;

	background-color: var(--ui);
	@include mixins.panel();

	&.align-right {
		left: auto !important;
		transform-origin: top right !important;
		right: 0;
	}

	&.accent {
		& .bg {
			background-color: var(--accent) !important;
		}

		& .menu-button {

			&:hover,
			&:focus,
			&.current {
				color: white;
			}
		}
	}

	& .inner {
		display: flex;
		justify-content: center;
		align-items: center;
		flex-direction: column;
		padding: 0.5rem;
	}

	&:hover .bg,
	&:focus-within:not(:focus) .bg {
		opacity: 1;
	}

	@each $color in variables.$colors {
		&.#{$color} {
			& .bg {
				background-color: var(--#{$color}-500) !important;
			}
		}
	}

	& .bg {
		height: 2rem;
		width: calc(100% - 1rem);
		position: absolute;
		z-index: 1;
		transition: top var(--d-m-1) var(--e-s), background-color var(--d-m-2) var(--e-s), transform var(--d-m-2) var(--e-s);
		
		@include mixins.dynamic-bg();

		&:active {
			transform: scale(0.9);
		}
	}

	& .separator {
		width: 100%;
		padding: 0.25rem $gutter;

		& > div {
			width: 100%;
			height: 1px;
			background-color: rgba(#3C3C43, 18%);

			html.dark & {
				background-color: rgba(98, 98, 98, 0.428);
			}
		}
	}

	& .menu-button {
		width: 100%;
		background-color: transparent;
		padding: 0.5rem $gutter;
		border-radius: $radius;
		color: var(--text-color);
		font-size: 0.875rem;
		font-weight: 500;
		display: flex;
		justify-content: space-between;
		align-items: center;
		text-align: left;
		position: relative;
		z-index: 2;

		@include mixins.inter();

		&:disabled {
			opacity: 0.5 !important;

			&:hover {
				opacity: 0.75 !important;
			}
		}

		&.custom-color:hover,
		&.custom-color:focus {
			color: white;

			& .transition {
				transition: var(--d-f-1) var(--e-s);
			}
		}

		&,
		& .transition {
			transition: var(--d-m-1) var(--e-s);
		}

		&:hover * {
			opacity: 1 !important;
		}

		& i {
			margin-right: 0.4rem;
		}
	}

	&.overflow-items {
		overflow: visible;

		& .inner {
			padding: 0.5rem 0;
			border-radius: $radius;
		}

		& .bg {
			width: calc(100% + 0.65rem);
			height: 2.25rem;
			// transform: scale(1.1);
		}

		& .menu-button {
			padding: 0.65rem calc($gutter + 0.25rem);
		}

		& .separator {
			width: 100%;
			padding: 0.5rem 0;

			& > div {
				width: 100%;
				height: 1px;
				background-color: rgba(#3C3C43, 18%);
			}
		}
	}

	&.lg-items {
		& .menu-button {
			padding-top: 0.75rem;
			padding-bottom: 0.75rem;
		}

		& .bg {
			height: 40px;
		}
	}

	&.lg-items:not(.overflow-items) {
		& .inner {
			padding: 0.75rem;
		}

		& .bg {
			width: calc(100% - 1.25rem);
		}

		& .menu-button {
			margin-top: 0;
		}
	}

	&.overflow-items.lg-items {
		& .bg {
			width: calc(100% + 0.75rem);
		}
	}
}