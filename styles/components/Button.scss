@use '../mixins';
@use '../variables';

.button {
	height: 2.25rem;
	appearance: none;
	padding: 0.5rem 0.875rem;
	padding-bottom: calc(0.5rem + 4px);
	border-radius: 0.25rem;
	font-size: 0.875rem;
	font-weight: 500;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	transition: var(--d-m-2) var(--e-s);

	background-color: var(--ui-yinyang);
	color: var(--ui);

	&:hover {
		opacity: 0.8;
	}

	&:focus-visible {
		outline: 2px solid var(--accent);
	}

	& i {
		margin-right: 0.25rem;
	}

	&.gray {
		background-color: var(--ui-1);
		color: var(--text-color);

		&:hover {
			background-color: var(--ui-2);
			opacity: 1;
		}

		&:active {
			background-color: var(--ui-3);
		}
	}

	&.ghost {
		background-color: transparent !important;
		color: white !important;

		&:hover {
			background-color: var(--ui-1) !important;
		}
	}
}

.links {
	& .link:not(:last-child) {
		margin-right: 1.5rem;
	}
}

.link {
	font-size: 1.125rem;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	flex-direction: row;
	background-color: transparent;
	color: var(--text-color);
	box-shadow: none;
	border: none;
	padding: 0;
	position: relative;

	@include mixins.link-focus();
	
	&, & i {
		transition: var(--d-m-1) var(--e-s);
	}

	&:hover {
		opacity: 0.7;

		&.with-icon i {
			// transform: rotate(0);
			transform: translate(2px, -2px) rotate(-45deg);
		}
	}

	& span {
		font-size: 1.125rem;
		font-weight: 400;
	}

	&.with-icon i {
		margin-left: 0.5rem;
		transform: rotate(-45deg);
	}
}

.social-button {
	color: var(--text-color-08);
	padding: 0.35rem;
	border-radius: 90px;
	transition: var(--d-m-1) var(--e-s);

	&:hover {
		color: var(--text-color);
		background-color: var(--ui-1);
	}

	html.dark & {
		color: var(--text-color);
	}
}


.top-button {
	$size: 2.5rem;

	width: $size;
	height: $size;
	position: fixed;
	bottom: 1.5rem;
	right: 1.5rem;
	display: flex;
	justify-content: center;
	align-items: center;
	background-color: transparent;
	cursor: pointer;

	opacity: 0;
	visibility: hidden;
	pointer-events: none;
	transform: translateY(2rem);

	&.show {
		opacity: 1;
		visibility: visible;
		pointer-events: auto;
		transform: translateY(0);
	}

	&:hover .bg {
		transform: scale(1.1);
	}

	&, & .bg {
		transition: var(--d-m-2) var(--e-s);
	}

	& .bg, & .icon-container {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	& .bg {
		width: $size;
		height: $size;
		background-color: var(--accent);
		border-radius: 90px;
		z-index: 1;
	}

	& .icon-container {
		color: white;
		z-index: 2;
	}
}

.normal-link {
	display: inline-flex;
	color: var(--text-color-08);
	text-decoration: none;
	line-height: 1.2;
	position: relative;

	@include mixins.link-focus();

	&:hover {
		opacity: 1 !important;
		text-decoration: underline;
	}

	&.active {
		font-style: italic;
	}

	&.btn {
		background-color: transparent;
		padding: 0;
		margin: 0;
	}

	&.in-grid {
		opacity: 0.9;

		&:not(:last-child) {
			margin-right: 1rem;
			margin-bottom: 1rem;
		}
	}
}

.simple-link {
	color: var(--text-color);
	position: relative;
	transition: var(--d-m-1) var(--e-s);

	@include mixins.link-focus(0);

	&:hover {
		opacity: 0.6;
	}
}

article a:not([class]), .default-link {
	position: relative;
	color: var(--text-color);
	text-decoration: underline;
	text-decoration-thickness: 1px;
	text-underline-offset: 0.05em;
	text-decoration-color: rgba(0, 0, 0, 0.4);
	transition: var(--d-m-1) var(--e-s);

	@include mixins.link-focus(0);

	&:focus-visible {
		text-decoration-color: rgba(0, 0, 0, 0);
	}

	&:hover {
		opacity: 0.6;
	}

	html.dark & {
		text-decoration-color: rgba(255, 255, 255, 0.4);
	}
}

.xbutton {
	$height: 1.75rem;

	padding: 0 0.5rem;
	padding-bottom: 2px;
	height: $height;
	color: white;
	border-radius: 0.25rem;
	font-weight: 500;
	line-height: $height;
	display: flex;
	justify-content: center;
	align-items: center;
	background-image: linear-gradient(to bottom, var(--accent-500), var(--accent-600));
	transition: var(--d-m-2) var(--e-s);

	@each $color in variables.$colors {
		&.#{$color} {
			background-image: linear-gradient(to bottom, var(--#{$color}-500), var(--#{$color}-600));
			box-shadow: 0 1px 0 0 var(--#{$color}-700);

			&:focus {
				outline: 2px solid var(--#{$color}-500);
				outline-offset: 2px;
			}
		}
	}

	&:hover {
		opacity: 0.7;
	}
}

.fluid-button {
	background-color: var(--ui-1);
	color: var(--text-color);
	font-weight: 600;
	padding: 0.5rem 0.75rem;
	padding-bottom:calc(0.5rem + 4px);
	border-radius: 0.5rem;
	transition: var(--d-m-1) var(--e-s);

	&:hover {
		opacity: 0.7;
	}

	&:focus {
		outline: 2px solid var(--accent);
		outline-offset: 2px;
	}
}